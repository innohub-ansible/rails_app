---
- name: update shared files
  sudo: true
  sudo_user: deployer
  template: src={{ item }} dest={{ rails_app_shared_path }}/config/{{ item }}
  with_items:
    - database.yml
    - secrets.yml
    - sidekiq.yml

- name: sidekiq | update upstart
  sudo: true
  template: src={{ item }} dest=/etc/init/{{ item }}
  with_items:
    - sidekiq.conf
  when: rails_app_sidekiq and "rails_app_sidekiq_group in group_names"

- name: sidekiq | reload (silent)
  service: name=sidekiq state=reloaded
  when: rails_app_sidekiq and "rails_app_sidekiq_group in group_names"

- name: mina | create deploy directory
  sudo: true
  sudo_user: deployer
  file: path={{ rails_app_deploy_script_directory }} state=directory recurse=yes

- name: mina | copy deploy.rb script
  sudo: true
  sudo_user: deployer
  template: src=mina_deploy.rb dest={{ rails_app_deploy_script_directory }}/deploy.rb

- name: mina | generate bash script
  sudo: true
  sudo_user: deployer
  shell: >
    executable=/bin/bash source /etc/profile;
    chruby `cat ~/.ruby-version` &&
    mina -S -f {{ rails_app_deploy_script_directory }}/deploy.rb deploy | grep -v "Elapsed" > {{ rails_app_deploy_script_directory }}/deploy.sh &&
    chmod +x {{ rails_app_deploy_script_directory }}/deploy.sh

- name: mina | execute bash script
  sudo: true
  sudo_user: deployer
  shell: >
    /bin/bash {{ rails_app_deploy_script_directory }}/deploy.sh

- name: whenever | update crontab with environment
  sudo: true
  sudo_user: deployer
  shell: /bin/bash -lc "bundle exec whenever -w {{ rails_app_name }} --set environment='{{ rails_app_env }}'"
  args:
    chdir: "{{ rails_app_current_path }}"
  when: rails_app_whenever and "'whenever_servers' in group_names"

- name: sidekiq | enable service
  service: name=sidekiq enabled=yes
  when: rails_app_sidekiq and "rails_app_sidekiq_group in group_names"

- name: sidekiq | restart
  sudo: true
  service: name=sidekiq state=restarted
  when: rails_app_sidekiq and "rails_app_sidekiq_group in group_names"

- name: capture rails app ruby path
  sudo: true
  sudo_user: deployer
  shell: >
    executable=/bin/bash source /etc/profile;
    chruby `cat ~/.ruby-version` &&
    which ruby
  register: rails_app_ruby_path
  when: "rails_app_nginx_group in group_names"

- name: update nginx site config
  template: src=nginx_site.conf dest=/etc/nginx/sites-enabled/{{ rails_app_name }}_{{ rails_app_env }}.conf
  notify: restart nginx
  when: "rails_app_nginx_group in group_names"

- name: copy ssl key
  template: src=ssl.key dest=/etc/nginx/{{ rails_app_name }}_{{ rails_app_env }}.key
  when: rails_app_ssl

- name: copy ssl certificate
  template: src=ssl.crt dest=/etc/nginx/{{ rails_app_name }}_{{ rails_app_env }}.crt
  when: rails_app_ssl
